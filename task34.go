package main

import "fmt"

func main() {
	str := "Hello, Go!"
	fmt.Println(str, isUnique(str))
	str = "qpwoeiruty"
	fmt.Println(str, isUnique(str))
}

func isUnique(str string) bool { // возвращает true, если все символы в переданной строке уникальные
	runes := []rune(str)        // строку приводим к типу []rune
	fmt.Println(runes)          //
	unique := map[rune]int{}    // создаем карту, у которой типом ключа будет руна, типом значения - int
	for _, val := range runes { // перебираем слайс, (опускаем индекс элементов)
		unique[val]++ // unique[val] = unique[val] + 1 -> 0 + 1
		// при использовании ключа, которого нет в отображении, поиск возвращает нулевое значение
		// соответствующего типа. Так что если, например, в слайсе есть 2 одинаковые руны, значит
		// первая итерация с такой руной создаст пару "ключ-значение", где ключ - руна, значение - 1.
		// вторая итерация с такой руной перезапишет значение по тому же ключу, увеличив его на 1-цу. "символ встретился второй раз"
	}
	fmt.Println(unique)          // пример: map[32:1 33:1 44:1 71:1 72:1 101:1 108:2 111:2]
	for _, val := range unique { // пробегаемся по карте, значения ключей опустим, нас интересуют только ЗНАЧЕНИЯ, связанные с этими ключами
		if val > 1 { // если символ встретился больше 1-го раза, возвращаем false
			return false
		}
	}
	return true
}
