package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	ch := make(chan int) // Т. к. канал небуферизованный, операция записи в него будет блокировать отправляющую горутину до тех пор, пока не будет выполнена операция чтения с
	go sender(ch) // соответствующим каналом
	go receiver(ch) // sender и receiver запустятся параллельно друг другу,
	time.Sleep(3 * time.Second) // и будут работать, пока не истечёт время блокировки main-горутины
}

func sender(ch chan int) { // sender() в бесконечном цикле производит операцию отправки значения по каналу "ch"
	for {
		ch <- rand.Int() % 100 // генерация псевдослучайного целочисленного значения
	}
}

func receiver(ch chan int) { // receiver() производит чтение значения из канала (также в бесконечном цикле)
	for {
		fmt.Println(<-ch)
	}
}