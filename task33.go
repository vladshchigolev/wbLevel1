package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	ch1 := make(chan int) // 1-ый канал - для отправки по нему рандомных чисел из слайса
	ch2 := make(chan int) // 2-ой для отправки по нему только четных чисел

	var arr []int
	for i := 0; i < 10; i++ { // набъём слайс десятью целочисленными значениями
		arr = append(arr, rand.Int()%10) // псевдослуч. число, возвращаемое rand.Int - слишком большое,
	} // массив заполним остатками от деления этих чисел на 10 (будут в диапазоне от 0 до 9)
	fmt.Println(arr, len(arr))

	for i := 0; i < 10; i++ {
		go sendEvenVal(ch1, ch2) // вызываем в новой горутине
		go receiveAndPrint(ch2)  // вызываем в новой горутине
		ch1 <- arr[i]            // на каждой итерации будут вызаваться обе функции и main-горутина отправит ОДНО значение по 1-му каналу, запустив конвейер
		// получается, КАЖДОЕ значение из слайса будет обрабатываться ОТДЕЛЬНЫМ конвейером (своей парой горутин)
	}

	time.Sleep(3 * time.Second)

}

// передаём первой функции оба канала: из одного она читает, в другой пишет
func sendEvenVal(ch1 chan int, ch2 chan int) { // эта ф-ция читает из 1-го канала число, и если оно чётное, пишет его во 2-ой канал
	num := <-ch1
	if num%2 == 0 {
		ch2 <- num
	}
}

// этой ф-ции передаем только второй канал - она только читает
func receiveAndPrint(ch2 chan int) { // эта горутина читает из 2-го канала значения, отрпавленные по нему первой горутиной и выводит их в stdout
	fmt.Println(<-ch2)
}
