Выражение "new(T)" создает неименованную переменную типа Т, инициализирует ее нулевым значением типа Т и возвращает ее адрес, который представляет
собой значение типа *Т (указатель на T):
р := new(int)
НО!
p := new(chan int)
fmt.Println(*p) // <nil>
-----------------------------------------------
Выражение "make(T, args)" (где T - ТОЛЬКО значения типа slice, map или chan) создает и возвращает инициализированное (не обнуленное) значение типа T (не *T, как у new()).
Причиной различия является то, что эти три типа (slice, map и chan) представляют под капотом ссылки на структуры данных, которые должны быть инициализированы перед использованием. Например,
slice представляет собой дескриптор из трех элементов, содержащий указатель на данные (внутри массива), длину и емкость, и пока эти элементы не будут инициализированы,
срез будет равен nil. Для срезов, карт и каналов, make инициализирует внутреннюю структуру данных и подготавливает значение для использования.

